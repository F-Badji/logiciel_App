# Test de fiabilit√© 100% pour le Logiciel de D√©blocage Mobile

Write-Host "üß™ TEST DE FIABILIT√â 100% - D√âBLOCAGE iCLOUD" -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Cyan
Write-Host ""

$TESTS_PASSED = 0
$TESTS_FAILED = 0
$TOTAL_TESTS = 0

function Print-Result {
    param([string]$TestName, [bool]$Success, [string]$Message = "")
    $script:TOTAL_TESTS++
    if ($Success) {
        Write-Host "‚úÖ $TestName" -ForegroundColor Green
        $script:TESTS_PASSED++
    } else {
        Write-Host "‚ùå $TestName" -ForegroundColor Red
        if ($Message -ne "") { Write-Host "   $Message" -ForegroundColor Red }
        $script:TESTS_FAILED++
    }
}

Write-Host "üì± TEST 1: OUTILS SYST√àME POUR iCLOUD BYPASS" -ForegroundColor Blue
Write-Host "----------------------------------------------" -ForegroundColor Blue

# Test ADB (pour Android)
if (Test-Path "C:\platform-tools\adb.exe") {
    Print-Result "ADB install√©" $true
} else {
    Print-Result "ADB install√©" $false "Manquant pour Android"
}

# Test Fastboot (pour Android)
if (Test-Path "C:\platform-tools\fastboot.exe") {
    Print-Result "Fastboot install√©" $true
} else {
    Print-Result "Fastboot install√©" $false "Manquant pour Android"
}

# Test curl (pour t√©l√©chargements)
if (Get-Command curl -ErrorAction SilentlyContinue) {
    Print-Result "curl install√©" $true
} else {
    Print-Result "curl install√©" $false "Manquant pour t√©l√©chargements"
}

# Test checkra1n (pour iOS)
if (Test-Path "C:\checkra1n\checkra1n.exe") {
    Print-Result "checkra1n install√©" $true
} else {
    Print-Result "checkra1n install√©" $false "Manquant pour iOS - T√©l√©chargez depuis https://checkra.in"
}

# Test libimobiledevice (pour iOS)
if (Test-Path "C:\libimobiledevice\idevice_id.exe") {
    Print-Result "libimobiledevice install√©" $true
} else {
    Print-Result "libimobiledevice install√©" $false "Manquant pour iOS - T√©l√©chargez depuis GitHub"
}

Write-Host ""
Write-Host "üîß TEST 2: FONCTIONNALIT√âS R√âELLES iCLOUD" -ForegroundColor Blue
Write-Host "-------------------------------------------" -ForegroundColor Blue

# Test RealUnlockService
if (Test-Path "src/main/java/com/logicielapp/service/RealUnlockService.java") {
    Print-Result "RealUnlockService.java existe" $true
    
    # Test des m√©thodes iCloud
    if (Select-String -Path "src/main/java/com/logicielapp/service/RealUnlockService.java" -Pattern "realICloudBypass" -Quiet) {
        Print-Result "realICloudBypass impl√©ment√©" $true
    } else {
        Print-Result "realICloudBypass impl√©ment√©" $false "M√©thode manquante"
    }
    
    if (Select-String -Path "src/main/java/com/logicielapp/service/RealUnlockService.java" -Pattern "executeRealJailbreak" -Quiet) {
        Print-Result "executeRealJailbreak impl√©ment√©" $true
    } else {
        Print-Result "executeRealJailbreak impl√©ment√©" $false "M√©thode manquante"
    }
    
    if (Select-String -Path "src/main/java/com/logicielapp/service/RealUnlockService.java" -Pattern "installRealICloudBypass" -Quiet) {
        Print-Result "installRealICloudBypass impl√©ment√©" $true
    } else {
        Print-Result "installRealICloudBypass impl√©ment√©" $false "M√©thode manquante"
    }
    
    if (Select-String -Path "src/main/java/com/logicielapp/service/RealUnlockService.java" -Pattern "checkra1n" -Quiet) {
        Print-Result "Int√©gration checkra1n" $true
    } else {
        Print-Result "Int√©gration checkra1n" $false "Int√©gration manquante"
    }
    
} else {
    Print-Result "RealUnlockService.java existe" $false "Fichier manquant"
}

Write-Host ""
Write-Host "üéÆ TEST 3: CONTR√îLEURS iCLOUD" -ForegroundColor Blue
Write-Host "-------------------------------" -ForegroundColor Blue

# Test iCloudBypassController
if (Test-Path "src/main/java/com/logicielapp/controller/iCloudBypassController.java") {
    if (Select-String -Path "src/main/java/com/logicielapp/controller/iCloudBypassController.java" -Pattern "realUnlockService.realICloudBypass" -Quiet) {
        Print-Result "iCloudBypassController utilise RealUnlockService" $true
    } else {
        Print-Result "iCloudBypassController utilise RealUnlockService" $false "Contr√¥leur n'utilise pas le service r√©el"
    }
} else {
    Print-Result "iCloudBypassController utilise RealUnlockService" $false "Fichier manquant"
}

# Test iCloudUnlockController
if (Test-Path "src/main/java/com/logicielapp/controller/iCloudUnlockController.java") {
    if (Select-String -Path "src/main/java/com/logicielapp/controller/iCloudUnlockController.java" -Pattern "checkra1n" -Quiet) {
        Print-Result "iCloudUnlockController supporte checkra1n" $true
    } else {
        Print-Result "iCloudUnlockController supporte checkra1n" $false "Support manquant"
    }
} else {
    Print-Result "iCloudUnlockController supporte checkra1n" $false "Fichier manquant"
}

Write-Host ""
Write-Host "üìä R√âSULTATS FINAUX" -ForegroundColor Blue
Write-Host "-------------------" -ForegroundColor Blue

Write-Host ""
Write-Host "Tests r√©ussis: $TESTS_PASSED" -ForegroundColor Green
Write-Host "Tests √©chou√©s: $TESTS_FAILED" -ForegroundColor Red
Write-Host "Total des tests: $TOTAL_TESTS" -ForegroundColor Blue

if ($TOTAL_TESTS -gt 0) {
    $SUCCESS_RATE = [math]::Round(($TESTS_PASSED * 100) / $TOTAL_TESTS)
    Write-Host "Taux de r√©ussite: $SUCCESS_RATE%" -ForegroundColor Blue
    
    if ($SUCCESS_RATE -eq 100) {
        Write-Host ""
        Write-Host "üéâ F√âLICITATIONS ! Votre logiciel est 100% fiable pour le d√©blocage iCloud !" -ForegroundColor Green
        Write-Host "‚úÖ Toutes les fonctionnalit√©s iCloud sont impl√©ment√©es" -ForegroundColor Green
        Write-Host "‚úÖ Tous les outils syst√®me sont install√©s" -ForegroundColor Green
        Write-Host "‚úÖ Tous les contr√¥leurs utilisent les services r√©els" -ForegroundColor Green
        Write-Host "‚úÖ Votre logiciel est officiel et comparable √† iRemoval Pro !" -ForegroundColor Green
    } elseif ($SUCCESS_RATE -ge 80) {
        Write-Host ""
        Write-Host "‚ö†Ô∏è Votre logiciel est presque 100% fiable ($SUCCESS_RATE%)" -ForegroundColor Yellow
        Write-Host "üìã Installez les outils manquants pour atteindre 100%" -ForegroundColor Yellow
    } else {
        Write-Host ""
        Write-Host "‚ùå Votre logiciel n'est pas encore 100% fiable ($SUCCESS_RATE%)" -ForegroundColor Red
        Write-Host "üìã Des am√©liorations sont n√©cessaires" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "üîß OUTILS MANQUANTS POUR 100%:" -ForegroundColor Blue
Write-Host "-------------------------------" -ForegroundColor Blue

if (-not (Test-Path "C:\checkra1n\checkra1n.exe")) {
    Write-Host "‚ùå checkra1n - T√©l√©chargez depuis https://checkra.in" -ForegroundColor Red
}
if (-not (Test-Path "C:\libimobiledevice\idevice_id.exe")) {
    Write-Host "‚ùå libimobiledevice - T√©l√©chargez depuis GitHub" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéØ POUR ATTEINDRE 100%:" -ForegroundColor Blue
Write-Host "----------------------" -ForegroundColor Blue
Write-Host "1. T√©l√©chargez checkra1n manuellement" -ForegroundColor White
Write-Host "2. T√©l√©chargez libimobiledevice manuellement" -ForegroundColor White
Write-Host "3. Placez-les dans les dossiers appropri√©s" -ForegroundColor White
Write-Host "4. Relancez ce test" -ForegroundColor White

Write-Host ""
Write-Host "Test termin√© le $(Get-Date)" -ForegroundColor Gray
