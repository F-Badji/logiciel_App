import com.logicielapp.service.RealDeviceDetectionService;
import com.logicielapp.model.Device;
import java.util.List;

/**
 * Test simple du service de d√©tection r√©elle
 */
public class TestRealDetection {
    public static void main(String[] args) {
        System.out.println("üîç Test du service de d√©tection r√©elle...");
        
        RealDeviceDetectionService service = new RealDeviceDetectionService();
        
        // Test de d√©tection iOS
        System.out.println("\nüì± Test d√©tection iOS:");
        List<Device> iosDevices = service.detectiOSDevices();
        if (iosDevices.isEmpty()) {
            System.out.println("Aucun appareil iOS d√©tect√©");
        } else {
            for (Device device : iosDevices) {
                System.out.println("- " + device.getBrand() + " " + device.getModel());
                System.out.println("  IMEI: " + device.getImei());
                System.out.println("  Serial: " + device.getSerialNumber());
                System.out.println("  OS: " + device.getOsVersion());
            }
        }
        
        // Test de d√©tection Android  
        System.out.println("\nü§ñ Test d√©tection Android:");
        List<Device> androidDevices = service.detectAndroidDevices();
        if (androidDevices.isEmpty()) {
            System.out.println("Aucun appareil Android d√©tect√© (ADB requis)");
        } else {
            for (Device device : androidDevices) {
                System.out.println("- " + device.getBrand() + " " + device.getModel());
                System.out.println("  IMEI: " + device.getImei());
                System.out.println("  Serial: " + device.getSerialNumber());
                System.out.println("  OS: " + device.getOsVersion());
            }
        }
        
        // Test de d√©tection compl√®te
        System.out.println("\nüîç Test d√©tection compl√®te:");
        List<Device> allDevices = service.detectAllConnectedDevices();
        System.out.println("Appareils d√©tect√©s: " + allDevices.size());
        
        for (Device device : allDevices) {
            System.out.println("\n‚úÖ Appareil trouv√©:");
            System.out.println("  Marque: " + device.getBrand());
            System.out.println("  Mod√®le: " + device.getModel());
            System.out.println("  Plateforme: " + device.getPlatform());
            System.out.println("  IMEI: " + device.getImei());
            System.out.println("  Num√©ro de s√©rie: " + device.getSerialNumber());
            System.out.println("  Version OS: " + device.getOsVersion());
            System.out.println("  Statut: " + device.getStatus());
            System.out.println("  Connexion: " + device.getConnectionType());
        }
        
        // Test d'IMEI stable (doit √™tre identique avec le m√™me serial)
        System.out.println("\nüéØ Test stabilit√© IMEI:");
        if (!allDevices.isEmpty()) {
            Device device1 = allDevices.get(0);
            List<Device> devices2 = service.detectAllConnectedDevices();
            if (!devices2.isEmpty()) {
                Device device2 = devices2.get(0);
                boolean sameIMEI = device1.getImei().equals(device2.getImei());
                System.out.println("IMEI stable: " + (sameIMEI ? "‚úÖ OUI" : "‚ùå NON"));
                System.out.println("IMEI 1: " + device1.getImei());
                System.out.println("IMEI 2: " + device2.getImei());
            }
        }
        
        System.out.println("\n‚úÖ Test termin√©!");
    }
}
